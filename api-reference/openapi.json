{
  "openapi": "3.0.1",
  "info": {
    "title": "GoodSpace Evaluate Candidate API",
    "description": "API to evaluate whether a candidate is a good fit for a job based on the provided job and candidate details.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.ourgoodspace.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/evaluate_candidate": {
      "post": {
        "description": "Evaluates a candidate's fit for a job based on provided details.",
        "requestBody": {
          "description": "Job details and candidate details to evaluate.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Evaluation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - malformed or missing required parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication failed or access denied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - rate limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - an unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EvaluationRequest": {
        "type": "object",
        "properties": {
          "jobDetails": {
            "type": "object",
            "properties": {
              "jobTitle": {
                "type": "string",
                "description": "Title of the job position."
              },
              "requiredSkills": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of skills required for the job."
              },
              "jobDescription": {
                "type": "string",
                "description": "Description of the job."
              }
            }
          },
          "candidateDetails": {
            "type": "object",
            "properties": {
              "candidateSkills": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of skills possessed by the candidate."
              },
              "candidateDesignation": {
                "type": "string",
                "description": "Current designation of the candidate."
              }
            }
          }
        }
      },
      "EvaluationResponse": {
        "type": "object",
        "properties": {
          "isGoodFit": {
            "type": "boolean",
            "description": "Indicates whether the candidate is a good fit for the job."
          },
          "feedback": {
            "type": "string",
            "description": "Feedback based on the candidate evaluation."
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}